- Refactor views and css

- Add sort_by for owned_games list
  - Logic is done. Just need to first figure out what it should sort by

- Add sort_by completion rate for playlists
  - And other sort_by options

- Expand playlist games
  - This will remove the "add games section" essentially until you either navigate out of the page, or to another playlist, or when you decide to click the same button to make the playlist games the original size

- Expand playlist details
- Edit playlist details

- Change the colour of the selected playlist to look better and different from the hover

- Playlist selection is saved even when you leave the page

- Types of playlists
  - Add model and schema stuff
  - How to enforce people to actually stick to their goals
  - Ongoing games vs games that can be completed etc
  - Start games from scratch playlist
    - Completed and started needs to be unticked for this playlist ONLY
    - Maybe a new table for just games that fit this condition?
  * Categorization playlists and to-commit-to playlists

- Completed playlists section
  - Kind of like "past" playlists like on Meetup for events

- Mobile-responsive

- Add playlist auto completion

- Move the game and dlc details (like image_url and developer) to the actual Games and DLCs table, not the owned games
  - Will have to refactor all the backend code
  - May be best to do this when you can expand on game details


- Find out how to use strong params when you may need to add things to the params
  - Pretty much how do you add to params is the question

- Add "hours clocked" to owned_games.
  - Users would have to manually input it in until I link their account to the site

- Change everything to rem
- Also look into how things can zoom in as well. Using rem based on a vw/vh fontsize means you can't really zoom in since it all scales to vw


** Way down the line
- Refactor everything
  - Make EVERYTHING follow the SRP
- How to use data attributes without them being seen really, or more so refactor them all so there's no vulnerabilities with user injections
  - Is it even possible for them to do so without directly accessing the database?
- Custom confirm popup for confirmation requests like deletion
- Decide if I want to have confirmation message for owned game deletion
  - Could make a selection tool to delete multiple games at once instead so the confirmation message isn't so bad?
- Preload images
  - Needed if images take a while to load, as the cards will increase in size when the image is loaded, and they should all be loaded together
- Add drag and drop from add_playlist_games to the actual playlist, and be able to insert them in order
- Look into memory leaks
- Rewrite all rails DB searching stuff to the actual SQL queries
- Pointer style looks very janky when moving between clickable/draggable elements quickly
  - Figure out a better way to make it look good while indicating that something is clickable
- Consider debouncing search functions

- There is a bug where the page below the header shifts up in the playlist page. Not sure what causes it, but if I can figure it out it's #1 priority
  - Leaving the page and coming back resets it of course


COMPLETED:

1/06
- Progress bars animate
  - No accelration yet though
- Added clear search functionality


1/05
- Add search_by stuff for add_playlist_games list
- Add search_by stuff for owned_games list


1/04
- Add functionality to update completed and played from the playlists page
- Moved selecting playlist invocation when dragging a playlist to the onStart function rather than onEnd in sortableJS
- Add completion rate stats on the playlist tab
- Adding a new playlist also sets the stats (default 0% of course)
- Add game count to the playlist


1/03
- Tested destruction of all records associated to a user when a user is destroyed
- Add deletion from playlist
  - This should add it back to the add games list in the correct order
- Add playlist ordering via SortableJS
- Add delete button for playlist
  - Delete, not remove, as you create the playlist yourself
- Dom content is fully updated dynamically with user interactions now (creating, sorting, and deleting playlists, and adding and removing games from playlists)
- Added sorting to playlist games
- Add logic for games in the playlist to have completion and started boxes ticked when being put in the playlist


1/02
- Error messages for playlist creation
  - Currently name conflict and creation errors only
  - Error messages are removed upon resubmission of a form
- Remove buttons are now red
- Created a popup div for whether a game was crud'd successfully or not
- Error messages for update and deleting failures
- Added scrolling capabilities for playlist sections
- Added add game functionality to playlists
- Added ordering entry into the database
  - Not actually functioning since nothing is displayed yet though
- Decide whether or not I want the page to refresh or not when I create a playlist
  - Not refreshing means I have to create an element containing the details of that playlist and all associated associations
  - May be easier to just refresh it
  - ** not refreshing in the end
- Display playlists on the playlist page
- Added logic for changing between playlists and adding event listeners for such
  - No displaying for anything other than the default playlist yet though
- Filter logic for games in a playlist taken out of the add games list works
- Clicking on a playlist will now also refresh the sections with their respective games, and will also let you add to different playlists this way
- Refresh playlist games and add games list when clicking on a new playlist
