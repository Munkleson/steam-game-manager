12/30

- Hovering over a game name that is too long in the suggestions list will expand it, and when mouse leaves the area it will go back to hiding the overflow
- Made a validation in the create that checks if a game is released or not yet, and also returns an error message saying so if it isn't

- Added DLC searching functionality
- You can now select which search method, games or dlc, via radio buttons
- Clicking on the game or dlc radio buttons will also refresh the search bar with the results for that search type, if any are to be found
- All other minor flair things like 'game added' vs 'dlc added' has been added too
- Adding game and dlc filter funcitonality in the owned games page can come next

- Fixed a bug due to my misunderstanding of how event listeners worked for radio buttons. How it was coded before, when you clicked on the label for games or dlcs, it would trigger the event listener for clicking on a radio button twice, because the event listener was attached to the label, not the radio button itself. Moving the event listener only to the radio button would trigger the callback once whether you click on the label or the radio button. The previous bug resulted in the search dropdown list not populating correctly (sometimes dlc for games, and vice versa)


12/31

- Refactored some styling code
  - The games list container element now rests below the header and scrolls well. Dragging a game also can move the screen down so you can move the game cards anywhere in the container without having to let go and scroll down first
- Added holding key down functionality to the dropdown list logic, rather than just having to press the key each time to select a new element.

- Added Users table
- Created associations between all current tables
- CRUD operations by user now works, but account features are not implemented. Only for testing purposes at the moment
- Refactored a lot of code to make this happen, mostly in the OwnedGames controller
- A lot of migrations for adding and removing were made for redundant code


1/01

- Created playlist and playlist_game models as well as all associated associations for them

- Created the form for new playlist entry fully using just JS. No form submit and database posting functionality yet

- Playlist creation now works
- Created logic for checking if a user actually owns the id before something is deleted or updated
  - I realised that with how it is set up, a user can just change the data-id on an element and delete that id, even if it isn't their game. Given that is a major issue, had to find a way to stop that from happening, which was simply to just see if user_id of the game matches the session user (which is just hardcoded for now)
  - There has to be significantly more verification
  - This will obviously need to change when it becomes not user ids but tokens or however it works
  - Still need to put a message showing if the deletion was unsuccessful
    - Should also do for update failures and order updates
    - Requires lots of rendering responses


1/02
- Created error messages and changed the layout of a form slightly (mostly widened and some class changes)
  - Unsure if the button sizes at the bottom should be full width of the form or smaller. Currently col-4
- Error messages are now removed upon submission of a form (should a previous one fail)
  - Have to consider if I put a success message for completion or a dropdown box from the top (if not redirecting)

- Changed the remove buttons on owned games to btn-danger rather than primary
  - Not sure if it's good yet
- There is now a popup div which lets you know if an operation was CRUD'd successfully or not, but not for all operations at the moment
  - Will have to go along and see which operations it should be used for
- Fixed errors for stats bar logic where if the last game in owned games was deleted, the bar colour would not reset to 0

- Created most functionality, including page layout, for the playlist page
- Can currently add games to playlist
  - Renders error and success messages based on the result
- Games are not displayed yet in the "games in this playlist" section

- Finalised layout for the playlist page major sections
- Added ordering to playlists and playlist_games
  - Creating a new entry now correctly puts in order
- You can now scroll down the individual sections of the playlists if it is longer than the screen height
- Added game display in the playlist and add game section
- Added ordering entry into the database
  - No updating yet with SortableJS
- Decided to render the playlist updating and creation without redirecting/refreshing the page for best UE
- Added logic for changing between playlists
- Filter logic for games in a playlist taken out of the add games list works
- Clicking on a playlist will now also renders the sections with their respective games, and will also let you add to different playlists this way (no removal from a playlist functionality yet)


1/03
- Fixed an error where clicking on the remove button on a playlist game deletes the game from the library
  - This was due to the action being there and form.preventDefault() had not been put in
- Removing game from a playlist now works, but needs a refresh to update the dom still
  - Next will be to update the dom with JS to show changes
- Made removing game from a playlist functionality functional. Removing a game from a playlist now not only removes the game from the games in this playlist section, but also puts it back in the add games to this playlist section
  - Inserts it to the correct order too

- Fixed a coding error where navigating between pages would not refresh the event listeners for all of the games on the default playlist, as it was tied to domcontentloaded event listener rather than just called every time

- Dom content is fully updated dynamically with user interactions now (creating, sorting, and deleting playlists, and adding and removing games from playlists)
- Added playlist deletion functionality
- Sorting playlist with dragging also works

- Added sorting to playlist games
- Fixed some issues with ordering of the games in playlists, as well as games appearing in other lists if the game was in more than one list

- When adding games to a playlist, it now autochecks the completed and started boxes

- Refactored logic to fix a coding error where when you click on a new playlist, which refreshes the playlist games section, the completed and started checkboxes would not be ticked even if true


1/04
- Added checkbox completion functionality to games in the playlist page
- Did major refactoring and optimization of code for checkbox marking

- Fixed a minor issue of stats not being updated correctly when a checkbox was marked on the owned_games_list page
  - This was due to the code being refactored and pulled into a globally imported script rather than local to owned_games_list
  - Not complete, the fix was done by doing a setTimeout of 1 millisecond to the functions that control the stats, but is minor and will do for now. May not have a major impact at any scale of the app anyway
  - Will have to refactor how stats work anyway, most likely when I add them to the playlist page
    - Probably has to be done by moving stats stuff to their own global script
- Modularised selecting the playlist
- Dragging a playlist to change the order also selects it after dropping it

- Fixed a minor issue where newly added games would not have the checkbox completion functionality
- Fixed an issue with the create playlist form not working due to a variable initialized without declaration
- Moved selecting playlist invocation when dragging a playlist to the onStart function rather than onEnd in sortableJS

- Added fully functional stats bars to playlists
- Refactored stats percentage and progress bar logic to be reusable regardless of page

- Refatored crud message creation to adhere to SRP better

- Removed an issue where potential malicious script could be injected via innerHTML
- Modularised all the playlist logic, as I needed to call upon them in other files too often
  - There may still be some bugs I haven't caught
- In my quest to modularise and refactor code, massive bugs were raised such as when adding or removing a game for a playlist, two would appear in its place, and both would be entered into the database. Those bugs have been fixed seemingly
- Added game count to the playlist. This is updated upon adding and removing games from the playlist

- Fixed missing code where if the add games section in playlist was empty, removing a game from a playlist wouldn't appear in the add games section


 1/05

- Moved more shared code to their own modules, which included major refactoring
- Fixed the bugs that came along with refactoring, such as scripts not loading upon page changes, or loading where they shouldn't be
- Adding window path checks fixed some issues"

- Created a search function in owned games and the playlist that displays games that match the search parameters
- Searching is done regardless of case and special character/spaces


1/06

- Progress bars update visuals at a static speed
- Fixed a lot of visual and css issues in the playlists page and rearranged the headers to be in their own divs away from the playlist content

- Refined the logic for searching within your library better for key presses like arrow keys, which shouldn't trigger a filter again (which was more an issue after clearing the search via the button)

- Fixed bugs where if you have a one playlist and you deleted it, any games in there would still appear in the playlist games section. Now correctly refreshes the content if you have no more playlists
- Deleting a playlist also now selects the first playlist


1/07

- Did major refactoring to the owned_games_list
- The methods and actions in the owned games controller are now a lot more modularized and the naming aligns with Rails conventions more compared to before
- Some of the database was updated as well. Owned games no longer have any game-specific data linked to it, and instead things like image_url and developer will be solely held in the Game and Dlc models from now on
- As a result of the refactoring, playlist functionality has broken for now


1/08

- Playlist functionality is working again without noticable bugs, but refactoring has not been done
- A lot of logic needed to be changed to accommodate for game details no longer being in owned_games. Had to link the game or dlc to the owned games themselves

- Added shift-tab for moving through the search dropdown list (moves up)
- Created playlist games controller and moved a lot of the logic from playlist controller to there that relates to the games
- Naming now aligns more with rails conventions
- Did some refactoring (mostly useless lines) in the playlist and playlist games controllers, but not a significant amount. More optimized still

- Refactored all the routes and fetch requests to align with Rails conventions. Resources is a possibility with some modification for custom routes now

- Refactored the routes and fetch requests to actually follow Rails conventions to the letter. Resources and collections are now used


1/09

- Refactored filter owned games logic to be a bit better with SRP


1/13

- Made a steam login authentication function. This will create a user if one is not found already, and import all their games from the steam API into their account on this app
- Added some other columns in the user table to adjust to steam integration


1/15

- Changed some naming around to be more intuitive.
- Created an empty home page for now, where all login functions would happen from and not the add games path

- When logging in, the database will be populated with any new games you have purchased since the last log in, or any you've deleted and forgot to add back yet
- Home page has some minor styling, mostly placeholder divs and other elements
- There is a dropdown when you click the profile icon, which allows you to log out
- Logging out or forcefully being logged out now redirects you to the home page


1/16

- Added ordering updates when deleting games. When games get added then, there will no longer be any overlap as they will all technically be unique.


1/23

- Changed some table columns to bigint rather that integer to fit with postgres 4 byte size limitation for int

- Added new columns to some models: playtime, last played, and hidden for owned games, and last updated for Users
- Playtime and last played now show on the owned games index
- Stimulus is now used to display the last played time of games
